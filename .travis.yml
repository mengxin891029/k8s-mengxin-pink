language: generic
# sudo: required
services:
  - docker
env:
  global:
    - GIT_SHA=$(git rev-parse HEAD)
    # - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  # upgrade to newer docker version to avoid the "gpgv, gpgv2 or gpgv1 required for verification" issue, which requires a runc 1.0.0-rc93
  # https://stackoverflow.com/questions/66319610/gpg-error-in-ubuntu-21-04-after-second-apt-get-update-during-docker-build
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  
  # # gcloud initialization
  # - openssl aes-256-cbc -K $encrypted_5185800709ee_key -iv $encrypted_5185800709ee_iv -in globalse-198312.json.enc -out globalse-198312.json -d
  # - curl https://sdk.cloud.google.com | bash > /dev/null;
  # - source $HOME/google-cloud-sdk/path.bash.inc
  # - gcloud components update kubectl
  # - gcloud auth activate-service-account --key-file globalse-198312.json
  # - gcloud config set project globalse-198312
  # - gcloud config set compute/zone asia-southeast1-a
  # - gcloud container clusters get-credentials mengxin-asia-southeast1-k8s
  # - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

  # Installation phase
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

  # Configuration phase
  - kubectl config set-credentials admin --token="$K8S_TOKEN"
  - kubectl config set-cluster k8s.mengxin.pink --server="$K8S_SERVER"
  - kubectl config set-context k8s.mengxin.pink --user=admin --namespace=default --cluster=k8s.mengxin.pink
  - kubectl config use-context k8s.mengxin.pink
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  
  # Testing phase
  # - docker build -t mengxin891029/test-sea-mengxin-ml -f ./docker-images/sea/dev/Dockerfile.dev ./docker-images/sea/dev

  # multi-architecture build
  - docker buildx create --name mybuilder --use

# script:
#   Test command to be executed
#   - docker run mengxin891029/test-sea-mengxin-ml

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: main
